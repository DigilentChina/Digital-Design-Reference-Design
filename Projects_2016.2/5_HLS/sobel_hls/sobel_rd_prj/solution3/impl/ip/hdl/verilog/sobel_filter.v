// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2015.4
// Copyright (C) 2015 Xilinx Inc. All rights reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="sobel_filter,hls_ip_2015_4,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=1,HLS_INPUT_PART=xc7a35tcpg236-1,HLS_INPUT_CLOCK=40.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=17.760000,HLS_SYN_LAT=-1,HLS_SYN_TPT=none,HLS_SYN_MEM=2,HLS_SYN_DSP=1,HLS_SYN_FF=261,HLS_SYN_LUT=509}" *)

module sobel_filter (
        ap_clk,
        ap_rst,
        inter_pix_V_address0,
        inter_pix_V_ce0,
        inter_pix_V_q0,
        out_pix_V_address0,
        out_pix_V_ce0,
        out_pix_V_we0,
        out_pix_V_d0,
        rows,
        cols
);

parameter    ap_const_logic_1 = 1'b1;
parameter    ap_const_logic_0 = 1'b0;
parameter    ap_ST_st1_fsm_0 = 3'b1;
parameter    ap_ST_st2_fsm_1 = 3'b10;
parameter    ap_ST_pp0_stg0_fsm_2 = 3'b100;
parameter    ap_true = 1'b1;
parameter    ap_const_lv32_2 = 32'b10;
parameter    ap_const_lv1_1 = 1'b1;
parameter    ap_const_lv32_0 = 32'b00000000000000000000000000000000;
parameter    ap_const_lv32_1 = 32'b1;
parameter    ap_const_lv1_0 = 1'b0;
parameter    ap_const_lv31_0 = 31'b0000000000000000000000000000000;
parameter    ap_const_lv24_0 = 24'b000000000000000000000000;
parameter    ap_const_lv31_1 = 31'b1;
parameter    ap_const_lv11_0 = 11'b00000000000;
parameter    ap_const_lv7_0 = 7'b0000000;
parameter    ap_const_lv32_FFFFFFFF = 32'b11111111111111111111111111111111;
parameter    ap_const_lv22_3FFFFF = 22'b1111111111111111111111;
parameter    ap_const_lv32_8 = 32'b1000;
parameter    ap_const_lv32_F = 32'b1111;
parameter    ap_const_lv32_10 = 32'b10000;
parameter    ap_const_lv32_17 = 32'b10111;
parameter    ap_const_lv6_0 = 6'b000000;
parameter    ap_const_lv13_19 = 13'b11001;
parameter    ap_const_lv9_80 = 9'b10000000;
parameter    ap_const_lv8_10 = 8'b10000;

input   ap_clk;
input   ap_rst;
output  [20:0] inter_pix_V_address0;
output   inter_pix_V_ce0;
input  [23:0] inter_pix_V_q0;
output  [20:0] out_pix_V_address0;
output   out_pix_V_ce0;
output   out_pix_V_we0;
output  [23:0] out_pix_V_d0;
input  [31:0] rows;
input  [31:0] cols;

reg inter_pix_V_ce0;
reg out_pix_V_ce0;
reg out_pix_V_we0;
reg   [30:0] ColIndex_assign_reg_175;
reg   [30:0] ap_reg_ppstg_ColIndex_assign_reg_175_pp0_it1;
(* fsm_encoding = "none" *) reg   [2:0] ap_CS_fsm = 3'b1;
reg    ap_sig_cseq_ST_pp0_stg0_fsm_2;
reg    ap_sig_bdd_34;
reg    ap_reg_ppiten_pp0_it0 = 1'b0;
reg    ap_reg_ppiten_pp0_it1 = 1'b0;
reg    ap_reg_ppiten_pp0_it2 = 1'b0;
reg    ap_reg_ppiten_pp0_it3 = 1'b0;
reg   [30:0] ap_reg_ppstg_ColIndex_assign_reg_175_pp0_it2;
reg    ap_sig_cseq_ST_st1_fsm_0;
reg    ap_sig_bdd_53;
wire   [31:0] tmp_fu_187_p2;
reg   [31:0] tmp_reg_514;
wire   [31:0] tmp_1_fu_193_p2;
reg   [31:0] tmp_1_reg_519;
wire   [0:0] tmp_2_fu_203_p2;
reg    ap_sig_cseq_ST_st2_fsm_1;
reg    ap_sig_bdd_68;
wire   [30:0] row_1_fu_208_p2;
reg   [30:0] row_1_reg_528;
wire   [0:0] tmp_3_fu_214_p2;
reg   [0:0] tmp_3_reg_533;
wire   [21:0] tmp_13_fu_243_p2;
reg   [21:0] tmp_13_reg_538;
wire   [0:0] tmp_5_fu_249_p2;
reg   [0:0] tmp_5_reg_543;
wire   [21:0] tmp_17_fu_285_p2;
reg   [21:0] tmp_17_reg_548;
wire   [0:0] tmp_8_fu_295_p2;
reg   [0:0] tmp_8_reg_553;
wire   [30:0] col_fu_300_p2;
reg   [30:0] col_reg_557;
wire   [0:0] tmp_9_fu_306_p2;
reg   [0:0] tmp_9_reg_562;
reg   [0:0] ap_reg_ppstg_tmp_9_reg_562_pp0_it1;
reg   [0:0] ap_reg_ppstg_tmp_9_reg_562_pp0_it2;
wire   [0:0] tmp_11_fu_311_p2;
reg   [0:0] tmp_11_reg_566;
reg   [0:0] ap_reg_ppstg_tmp_11_reg_566_pp0_it1;
reg   [0:0] ap_reg_ppstg_tmp_11_reg_566_pp0_it2;
wire   [0:0] or_cond_fu_336_p2;
wire   [63:0] tmp_s_fu_361_p1;
reg   [63:0] tmp_s_reg_584;
wire   [10:0] buff_A_M_0_address0;
reg    buff_A_M_0_ce0;
wire   [7:0] buff_A_M_0_q0;
wire   [10:0] buff_A_M_0_address1;
reg    buff_A_M_0_ce1;
reg    buff_A_M_0_we1;
wire   [7:0] buff_A_M_0_d1;
wire   [10:0] buff_A_M_1_address0;
reg    buff_A_M_1_ce0;
reg    buff_A_M_1_we0;
wire   [7:0] buff_A_M_1_d0;
reg   [30:0] row_reg_164;
reg   [30:0] ColIndex_assign_phi_fu_179_p4;
wire  signed [63:0] tmp_20_cast_fu_325_p1;
wire  signed [63:0] tmp_24_cast_fu_356_p1;
wire   [63:0] tmp_12_fu_366_p1;
wire   [31:0] row_cast_fu_199_p1;
wire   [10:0] tmp_4_fu_219_p1;
wire   [14:0] tmp_7_fu_231_p1;
wire   [21:0] p_shl2_cast_fu_223_p3;
wire   [21:0] p_shl3_cast_fu_235_p3;
wire   [31:0] tmp_6_fu_255_p2;
wire   [10:0] tmp_14_fu_261_p1;
wire   [14:0] tmp_16_fu_273_p1;
wire   [21:0] p_shl_cast_fu_265_p3;
wire   [21:0] p_shl1_cast_fu_277_p3;
wire   [31:0] ColIndex_assign_cast_fu_291_p1;
wire   [21:0] tmp_18_fu_316_p1;
wire   [21:0] tmp_19_fu_320_p2;
wire   [0:0] tmp_15_fu_330_p2;
wire   [21:0] tmp_21_fu_341_p1;
wire   [21:0] tmp_22_fu_345_p2;
wire   [21:0] tmp_23_fu_351_p2;
wire   [7:0] tmp_20_fu_385_p4;
wire   [13:0] p_shl1_i_fu_395_p3;
wire   [8:0] p_shl2_i_fu_407_p3;
wire   [7:0] p_Val2_3_fu_375_p4;
wire   [14:0] p_shl_i_fu_423_p3;
wire   [7:0] r_V_fu_371_p1;
wire   [7:0] tmp_26_i_fu_439_p1;
wire   [14:0] p_shl2_i_cast_fu_415_p1;
wire   [14:0] p_shl1_i_cast_fu_403_p1;
wire   [14:0] tmp2_fu_445_p2;
wire   [15:0] tmp2_cast_fu_451_p1;
wire   [15:0] p_shl_i_cast_fu_431_p1;
wire   [8:0] tmp_23_i_cast5_fu_419_p1;
wire   [8:0] tmp4_fu_461_p2;
wire   [12:0] tmp4_cast_fu_467_p1;
wire   [12:0] tmp_26_i_fu_439_p2;
wire   [12:0] tmp3_fu_471_p2;
wire   [15:0] tmp3_cast_fu_477_p1;
wire   [15:0] tmp1_fu_455_p2;
wire   [15:0] tmp_29_i_fu_481_p2;
wire   [7:0] tmp_31_i_fu_487_p4;
reg   [2:0] ap_NS_fsm;
wire   [12:0] tmp_26_i_fu_439_p10;


sobel_filter_buff_A_M_0 #(
    .DataWidth( 8 ),
    .AddressRange( 1920 ),
    .AddressWidth( 11 ))
buff_A_M_0_U(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .address0( buff_A_M_0_address0 ),
    .ce0( buff_A_M_0_ce0 ),
    .q0( buff_A_M_0_q0 ),
    .address1( buff_A_M_0_address1 ),
    .ce1( buff_A_M_0_ce1 ),
    .we1( buff_A_M_0_we1 ),
    .d1( buff_A_M_0_d1 )
);

sobel_filter_buff_A_M_1 #(
    .DataWidth( 8 ),
    .AddressRange( 1920 ),
    .AddressWidth( 11 ))
buff_A_M_1_U(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .address0( buff_A_M_1_address0 ),
    .ce0( buff_A_M_1_ce0 ),
    .we0( buff_A_M_1_we0 ),
    .d0( buff_A_M_1_d0 )
);



always @ (posedge ap_clk) begin : ap_ret_ap_CS_fsm
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_st1_fsm_0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin : ap_ret_ap_reg_ppiten_pp0_it0
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it0 <= ap_const_logic_0;
    end else begin
        if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_2) & (ap_const_lv1_0 == tmp_8_fu_295_p2))) begin
            ap_reg_ppiten_pp0_it0 <= ap_const_logic_0;
        end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1) & ~(tmp_2_fu_203_p2 == ap_const_lv1_0))) begin
            ap_reg_ppiten_pp0_it0 <= ap_const_logic_1;
        end
    end
end

always @ (posedge ap_clk) begin : ap_ret_ap_reg_ppiten_pp0_it1
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it1 <= ap_const_logic_0;
    end else begin
        if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_2) & ~(ap_const_lv1_0 == tmp_8_fu_295_p2))) begin
            ap_reg_ppiten_pp0_it1 <= ap_const_logic_1;
        end else if ((((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1) & ~(tmp_2_fu_203_p2 == ap_const_lv1_0)) | ((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_2) & (ap_const_lv1_0 == tmp_8_fu_295_p2)))) begin
            ap_reg_ppiten_pp0_it1 <= ap_const_logic_0;
        end
    end
end

always @ (posedge ap_clk) begin : ap_ret_ap_reg_ppiten_pp0_it2
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it2 <= ap_const_logic_0;
    end else begin
        ap_reg_ppiten_pp0_it2 <= ap_reg_ppiten_pp0_it1;
    end
end

always @ (posedge ap_clk) begin : ap_ret_ap_reg_ppiten_pp0_it3
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it3 <= ap_const_logic_0;
    end else begin
        ap_reg_ppiten_pp0_it3 <= ap_reg_ppiten_pp0_it2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_2) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & ~(ap_const_lv1_0 == tmp_8_reg_553))) begin
        ColIndex_assign_reg_175 <= col_reg_557;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1) & ~(tmp_2_fu_203_p2 == ap_const_lv1_0))) begin
        ColIndex_assign_reg_175 <= ap_const_lv31_0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_2) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (ap_const_lv1_0 == tmp_8_fu_295_p2))) begin
        row_reg_164 <= row_1_reg_528;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0)) begin
        row_reg_164 <= ap_const_lv31_0;
    end
end

always @ (posedge ap_clk) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_2)) begin
        ap_reg_ppstg_ColIndex_assign_reg_175_pp0_it1 <= ColIndex_assign_reg_175;
        ap_reg_ppstg_tmp_11_reg_566_pp0_it1 <= tmp_11_reg_566;
        ap_reg_ppstg_tmp_9_reg_562_pp0_it1 <= tmp_9_reg_562;
        tmp_8_reg_553 <= tmp_8_fu_295_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((ap_true == ap_true)) begin
        ap_reg_ppstg_ColIndex_assign_reg_175_pp0_it2 <= ap_reg_ppstg_ColIndex_assign_reg_175_pp0_it1;
        ap_reg_ppstg_tmp_11_reg_566_pp0_it2 <= ap_reg_ppstg_tmp_11_reg_566_pp0_it1;
        ap_reg_ppstg_tmp_9_reg_562_pp0_it2 <= ap_reg_ppstg_tmp_9_reg_562_pp0_it1;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_2) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it0))) begin
        col_reg_557 <= col_fu_300_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1)) begin
        row_1_reg_528 <= row_1_fu_208_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_2) & ~(ap_const_lv1_0 == tmp_8_fu_295_p2))) begin
        tmp_11_reg_566 <= tmp_11_fu_311_p2;
        tmp_9_reg_562 <= tmp_9_fu_306_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1) & ~(tmp_2_fu_203_p2 == ap_const_lv1_0))) begin
        tmp_13_reg_538[21 : 7] <= tmp_13_fu_243_p2[21 : 7];
        tmp_17_reg_548[21 : 7] <= tmp_17_fu_285_p2[21 : 7];
        tmp_3_reg_533 <= tmp_3_fu_214_p2;
        tmp_5_reg_543 <= tmp_5_fu_249_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0)) begin
        tmp_1_reg_519 <= tmp_1_fu_193_p2;
        tmp_reg_514 <= tmp_fu_187_p2;
    end
end

always @ (posedge ap_clk) begin
    if (~(ap_const_lv1_0 == ap_reg_ppstg_tmp_9_reg_562_pp0_it1)) begin
        tmp_s_reg_584[30 : 0] <= tmp_s_fu_361_p1[30 : 0];
    end
end

always @ (ColIndex_assign_reg_175 or ap_sig_cseq_ST_pp0_stg0_fsm_2 or ap_reg_ppiten_pp0_it1 or tmp_8_reg_553 or col_reg_557) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_2) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & ~(ap_const_lv1_0 == tmp_8_reg_553))) begin
        ColIndex_assign_phi_fu_179_p4 = col_reg_557;
    end else begin
        ColIndex_assign_phi_fu_179_p4 = ColIndex_assign_reg_175;
    end
end

always @ (ap_sig_bdd_34) begin
    if (ap_sig_bdd_34) begin
        ap_sig_cseq_ST_pp0_stg0_fsm_2 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_pp0_stg0_fsm_2 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_53) begin
    if (ap_sig_bdd_53) begin
        ap_sig_cseq_ST_st1_fsm_0 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st1_fsm_0 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_68) begin
    if (ap_sig_bdd_68) begin
        ap_sig_cseq_ST_st2_fsm_1 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st2_fsm_1 = ap_const_logic_0;
    end
end

always @ (ap_reg_ppiten_pp0_it2) begin
    if ((ap_const_logic_1 == ap_reg_ppiten_pp0_it2)) begin
        buff_A_M_0_ce0 = ap_const_logic_1;
    end else begin
        buff_A_M_0_ce0 = ap_const_logic_0;
    end
end

always @ (ap_reg_ppiten_pp0_it3) begin
    if ((ap_const_logic_1 == ap_reg_ppiten_pp0_it3)) begin
        buff_A_M_0_ce1 = ap_const_logic_1;
    end else begin
        buff_A_M_0_ce1 = ap_const_logic_0;
    end
end

always @ (ap_reg_ppiten_pp0_it3 or ap_reg_ppstg_tmp_11_reg_566_pp0_it2) begin
    if (((ap_const_logic_1 == ap_reg_ppiten_pp0_it3) & ~(ap_const_lv1_0 == ap_reg_ppstg_tmp_11_reg_566_pp0_it2))) begin
        buff_A_M_0_we1 = ap_const_logic_1;
    end else begin
        buff_A_M_0_we1 = ap_const_logic_0;
    end
end

always @ (ap_reg_ppiten_pp0_it3) begin
    if ((ap_const_logic_1 == ap_reg_ppiten_pp0_it3)) begin
        buff_A_M_1_ce0 = ap_const_logic_1;
    end else begin
        buff_A_M_1_ce0 = ap_const_logic_0;
    end
end

always @ (ap_reg_ppiten_pp0_it3 or ap_reg_ppstg_tmp_9_reg_562_pp0_it2) begin
    if (((ap_const_logic_1 == ap_reg_ppiten_pp0_it3) & ~(ap_const_lv1_0 == ap_reg_ppstg_tmp_9_reg_562_pp0_it2))) begin
        buff_A_M_1_we0 = ap_const_logic_1;
    end else begin
        buff_A_M_1_we0 = ap_const_logic_0;
    end
end

always @ (ap_sig_cseq_ST_pp0_stg0_fsm_2 or ap_reg_ppiten_pp0_it0 or ap_reg_ppiten_pp0_it1 or ap_reg_ppiten_pp0_it2 or ap_reg_ppiten_pp0_it3) begin
    if (((ap_const_logic_1 == ap_reg_ppiten_pp0_it2) | (ap_const_logic_1 == ap_reg_ppiten_pp0_it3) | ((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_2) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it0)) | ((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_2) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)))) begin
        inter_pix_V_ce0 = ap_const_logic_1;
    end else begin
        inter_pix_V_ce0 = ap_const_logic_0;
    end
end

always @ (ap_sig_cseq_ST_pp0_stg0_fsm_2 or ap_reg_ppiten_pp0_it0 or ap_reg_ppiten_pp0_it1) begin
    if ((((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_2) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it0)) | ((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_2) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)))) begin
        out_pix_V_ce0 = ap_const_logic_1;
    end else begin
        out_pix_V_ce0 = ap_const_logic_0;
    end
end

always @ (ap_sig_cseq_ST_pp0_stg0_fsm_2 or ap_reg_ppiten_pp0_it0 or tmp_8_fu_295_p2 or or_cond_fu_336_p2) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_2) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & ~(ap_const_lv1_0 == tmp_8_fu_295_p2) & ~(ap_const_lv1_0 == or_cond_fu_336_p2))) begin
        out_pix_V_we0 = ap_const_logic_1;
    end else begin
        out_pix_V_we0 = ap_const_logic_0;
    end
end
always @ (ap_CS_fsm or ap_reg_ppiten_pp0_it0 or ap_reg_ppiten_pp0_it1 or ap_reg_ppiten_pp0_it2 or ap_reg_ppiten_pp0_it3 or tmp_2_fu_203_p2 or tmp_8_fu_295_p2) begin
    case (ap_CS_fsm)
        ap_ST_st1_fsm_0 : 
        begin
            ap_NS_fsm = ap_ST_st2_fsm_1;
        end
        ap_ST_st2_fsm_1 : 
        begin
            if ((tmp_2_fu_203_p2 == ap_const_lv1_0)) begin
                ap_NS_fsm = ap_ST_st1_fsm_0;
            end else begin
                ap_NS_fsm = ap_ST_pp0_stg0_fsm_2;
            end
        end
        ap_ST_pp0_stg0_fsm_2 : 
        begin
            if ((~((ap_const_logic_1 == ap_reg_ppiten_pp0_it3) & ~(ap_const_logic_1 == ap_reg_ppiten_pp0_it2)) & ~((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (ap_const_lv1_0 == tmp_8_fu_295_p2) & ~(ap_const_logic_1 == ap_reg_ppiten_pp0_it1)))) begin
                ap_NS_fsm = ap_ST_pp0_stg0_fsm_2;
            end else if (((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (ap_const_lv1_0 == tmp_8_fu_295_p2) & ~(ap_const_logic_1 == ap_reg_ppiten_pp0_it1))) begin
                ap_NS_fsm = ap_ST_st2_fsm_1;
            end else begin
                ap_NS_fsm = ap_ST_st2_fsm_1;
            end
        end
        default : 
        begin
            ap_NS_fsm = 'bx;
        end
    endcase
end


assign ColIndex_assign_cast_fu_291_p1 = ColIndex_assign_phi_fu_179_p4;


always @ (ap_CS_fsm) begin
    ap_sig_bdd_34 = (ap_CS_fsm[ap_const_lv32_2] == ap_const_lv1_1);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_53 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_0]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_68 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_1]);
end

assign buff_A_M_0_address0 = tmp_s_fu_361_p1;

assign buff_A_M_0_address1 = tmp_12_fu_366_p1;

assign buff_A_M_0_d1 = (ap_const_lv8_10 + tmp_31_i_fu_487_p4);

assign buff_A_M_1_address0 = tmp_s_reg_584;

assign buff_A_M_1_d0 = buff_A_M_0_q0;

assign col_fu_300_p2 = (ColIndex_assign_phi_fu_179_p4 + ap_const_lv31_1);

assign inter_pix_V_address0 = tmp_20_cast_fu_325_p1;

assign or_cond_fu_336_p2 = (tmp_5_reg_543 & tmp_15_fu_330_p2);

assign out_pix_V_address0 = tmp_24_cast_fu_356_p1;

assign out_pix_V_d0 = ap_const_lv24_0;

assign p_Val2_3_fu_375_p4 = {{inter_pix_V_q0[ap_const_lv32_F : ap_const_lv32_8]}};

assign p_shl1_cast_fu_277_p3 = {{tmp_16_fu_273_p1}, {ap_const_lv7_0}};

assign p_shl1_i_cast_fu_403_p1 = p_shl1_i_fu_395_p3;

assign p_shl1_i_fu_395_p3 = {{tmp_20_fu_385_p4}, {ap_const_lv6_0}};

assign p_shl2_cast_fu_223_p3 = {{tmp_4_fu_219_p1}, {ap_const_lv11_0}};

assign p_shl2_i_cast_fu_415_p1 = p_shl2_i_fu_407_p3;

assign p_shl2_i_fu_407_p3 = {{tmp_20_fu_385_p4}, {ap_const_lv1_0}};

assign p_shl3_cast_fu_235_p3 = {{tmp_7_fu_231_p1}, {ap_const_lv7_0}};

assign p_shl_cast_fu_265_p3 = {{tmp_14_fu_261_p1}, {ap_const_lv11_0}};

assign p_shl_i_cast_fu_431_p1 = p_shl_i_fu_423_p3;

assign p_shl_i_fu_423_p3 = {{p_Val2_3_fu_375_p4}, {ap_const_lv7_0}};

assign r_V_fu_371_p1 = inter_pix_V_q0[7:0];

assign row_1_fu_208_p2 = (row_reg_164 + ap_const_lv31_1);

assign row_cast_fu_199_p1 = row_reg_164;

assign tmp1_fu_455_p2 = (tmp2_cast_fu_451_p1 + p_shl_i_cast_fu_431_p1);

assign tmp2_cast_fu_451_p1 = tmp2_fu_445_p2;

assign tmp2_fu_445_p2 = (p_shl2_i_cast_fu_415_p1 + p_shl1_i_cast_fu_403_p1);

assign tmp3_cast_fu_477_p1 = tmp3_fu_471_p2;

assign tmp3_fu_471_p2 = (tmp4_cast_fu_467_p1 + tmp_26_i_fu_439_p2);

assign tmp4_cast_fu_467_p1 = tmp4_fu_461_p2;

assign tmp4_fu_461_p2 = (ap_const_lv9_80 + tmp_23_i_cast5_fu_419_p1);

assign tmp_11_fu_311_p2 = (tmp_9_fu_306_p2 & tmp_3_reg_533);

assign tmp_12_fu_366_p1 = ap_reg_ppstg_ColIndex_assign_reg_175_pp0_it2;

assign tmp_13_fu_243_p2 = (p_shl2_cast_fu_223_p3 - p_shl3_cast_fu_235_p3);

assign tmp_14_fu_261_p1 = tmp_6_fu_255_p2[10:0];

assign tmp_15_fu_330_p2 = (ColIndex_assign_phi_fu_179_p4 != ap_const_lv31_0? 1'b1: 1'b0);

assign tmp_16_fu_273_p1 = tmp_6_fu_255_p2[14:0];

assign tmp_17_fu_285_p2 = (p_shl_cast_fu_265_p3 - p_shl1_cast_fu_277_p3);

assign tmp_18_fu_316_p1 = ColIndex_assign_phi_fu_179_p4[21:0];

assign tmp_19_fu_320_p2 = (tmp_18_fu_316_p1 + tmp_13_reg_538);

assign tmp_1_fu_193_p2 = (cols + ap_const_lv32_1);

assign tmp_20_cast_fu_325_p1 = $signed(tmp_19_fu_320_p2);

assign tmp_20_fu_385_p4 = {{inter_pix_V_q0[ap_const_lv32_17 : ap_const_lv32_10]}};

assign tmp_21_fu_341_p1 = ColIndex_assign_phi_fu_179_p4[21:0];

assign tmp_22_fu_345_p2 = ($signed(ap_const_lv22_3FFFFF) + $signed(tmp_21_fu_341_p1));

assign tmp_23_fu_351_p2 = (tmp_17_reg_548 + tmp_22_fu_345_p2);

assign tmp_23_i_cast5_fu_419_p1 = p_Val2_3_fu_375_p4;

assign tmp_24_cast_fu_356_p1 = $signed(tmp_23_fu_351_p2);

assign tmp_26_i_fu_439_p1 = tmp_26_i_fu_439_p10;

assign tmp_26_i_fu_439_p10 = r_V_fu_371_p1;

assign tmp_26_i_fu_439_p2 = (ap_const_lv13_19 * tmp_26_i_fu_439_p1);

assign tmp_29_i_fu_481_p2 = (tmp3_cast_fu_477_p1 + tmp1_fu_455_p2);

assign tmp_2_fu_203_p2 = ($signed(row_cast_fu_199_p1) < $signed(tmp_reg_514)? 1'b1: 1'b0);

assign tmp_31_i_fu_487_p4 = {{tmp_29_i_fu_481_p2[ap_const_lv32_F : ap_const_lv32_8]}};

assign tmp_3_fu_214_p2 = ($signed(row_cast_fu_199_p1) < $signed(rows)? 1'b1: 1'b0);

assign tmp_4_fu_219_p1 = row_reg_164[10:0];

assign tmp_5_fu_249_p2 = (row_reg_164 != ap_const_lv31_0? 1'b1: 1'b0);

assign tmp_6_fu_255_p2 = ($signed(ap_const_lv32_FFFFFFFF) + $signed(row_cast_fu_199_p1));

assign tmp_7_fu_231_p1 = row_reg_164[14:0];

assign tmp_8_fu_295_p2 = ($signed(ColIndex_assign_cast_fu_291_p1) < $signed(tmp_1_reg_519)? 1'b1: 1'b0);

assign tmp_9_fu_306_p2 = ($signed(ColIndex_assign_cast_fu_291_p1) < $signed(cols)? 1'b1: 1'b0);

assign tmp_fu_187_p2 = (rows + ap_const_lv32_1);

assign tmp_s_fu_361_p1 = ap_reg_ppstg_ColIndex_assign_reg_175_pp0_it1;
always @ (posedge ap_clk) begin
    tmp_13_reg_538[6:0] <= 7'b0000000;
    tmp_17_reg_548[6:0] <= 7'b0000000;
    tmp_s_reg_584[63:31] <= 33'b000000000000000000000000000000000;
end



endmodule //sobel_filter

